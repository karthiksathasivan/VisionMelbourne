@model VisionMelbourneV3.Models.DetailedLocation
@{
    ViewBag.Title = Model.Location;
    string tolocation = Model.Location;
    DateTime fulldate = (DateTime)Model.Date;
    TimeSpan fulltime = (TimeSpan)fulldate.TimeOfDay;
    string weatherDate = fulldate.Date.ToString("yyyy-MM-dd");
    string date = fulldate.Date.ToString("dd/MM/yyyy");
    string time = fulldate.TimeOfDay.ToString(@"hh\:mm");
}


<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/style.css" rel="stylesheet" />

<body data-gr-c-s-loaded="true" rlt="1" style="" onload="initMap()">

    <div>

        <div class="page-header">
            <div class="container">
                <div class="breadcrumbs">
                    <ul class="list-unstyled">
                        <li>
                            <a href="/">Home</a>
                        </li>
                        <li>
                            <a href=@Url.Action(controllerName: "UserPlans",actionName: "CategoryIndex", routeValues: new { category = Model.Theme })>@Model.Theme</a>
                        </li>
                        <li>
                            @Model.Location
                        </li>
                    </ul>
                </div> <!-- end .breadcrumbs -->
            </div> <!-- end .container -->
            <div class="row">
                @*<div style="text-align:center">
                        @Html.ActionLink("< Back to List", "CategoryIndex", new { category = Model.Theme, date = Model.Date }, new { @class = "button" })

                    </div>*@
            </div>
        </div> <!-- end .page-header -->

        <div class="page-title">
            <div class="inner">
                <div class="frame">
                    <div class="zoom">
                        <h2>See more details about @Model.Location , @Model.Theme</h2>
                    </div>
                </div>
                <div class="frame">
                    <div class="zoom">
                        <p>enjoy the travel in the Melbourne CBD!</p>
                    </div>
                </div>
            </div> <!-- end .inner -->
        </div> <!-- end .page-title -->

        <div class="section boxed-section light shop-details">
            <div class="inner">
                <div class="container">
                    <div class="box">

                        <div class="row">
                            <div class="col-md-6">
                                <div class="blog-post gallery product-gallery">
                                    <div class="blog-gallery owl-carousel owl-theme owl-loaded">
                                        <div id='map' style='width: 100%; height: 600px;'></div>
                                    </div> <!-- end .blog-gallery -->
                                    <br />
                                    <div class="frame">
                                        <div class="zoom">
                                            <div style="text-align:center;"><button type="button" class="button" onclick="redirectToMaps();">get directions</button></div>
                                        </div>
                                    </div><br />
                                </div> <!-- end .blog-post -->
                            </div> <!-- end col-md-6 -->

                            <div class="col-md-6">
                                @using (Html.BeginForm("Details", "UserPlans"))
                                {
                                    <div class="searchform" style="text-align:left">
                                        <div class="frame">
                                            <div class="zoom">
                                                <label for="FLocation">*Plan Date and Time</label>
                                            </div>
                                        </div>
                                        <div class="frame">
                                            <div class="zoom">
                                                <input id="Date" required type="datetime" name="date" class="date-container" placeholder="Please choose your departure date" onfocus="this.placeholder=''" onblur="this.placeholder ='Please choose your departure date'" style="border:solid" />
                                                <button><i class="fa fa-calendar"></i></button>
                                            </div>
                                        </div>
                                        <br />
                                        <input name="id" hidden value=@Model.LocationID />
                                        <div style="text-align:center">
                                            <input type="submit" value="Update Details" class="button" />
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="frame">
                                                <div class="zoom">
                                                    <b>Place</b>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-9">
                                            <div style="text-align:center">
                                                <div class="frame">
                                                    <div class="zoom">
                                                        @Model.Location
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="frame">
                                                <div class="zoom">
                                                    <b>Date</b>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-9">
                                            <div style="text-align:center">
                                                <div class="frame">
                                                    <div class="zoom">
                                                        @date
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="frame">
                                                <div class="zoom">
                                                    <b>Time </b>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-9">
                                            <div style="text-align:center">
                                                <div class="frame">
                                                    <div class="zoom">
                                                        @time
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="frame">
                                                <div class="zoom">
                                                    <b>Pedestrian Traffic  </b>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-9">
                                            @if (Convert.ToInt32(Model.PeopleCount) == 0)
                                            {
                                                <div style="text-align:center">
                                                    <div class="frame">
                                                        <div class="zoom">
                                                            <i class="glyphicon glyphicon-ban-circle"></i>
                                                            <p>Sorry no info found!</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            @if (Convert.ToInt32(Model.PeopleCount) <= 200 && Convert.ToInt32(Model.PeopleCount) > 0)
                                            {
                                                <div style="text-align:center">
                                                    <div class="frame">
                                                        <div class="zoom">
                                                            <i class="glyphicon glyphicon-user"></i> <i class="glyphicon glyphicon-user"></i>
                                                            <p>Free Street!</p>
                                                        </div>
                                                    </div>
                                                </div>

                                            }

                                            @if (Convert.ToInt32(Model.PeopleCount) <= 400 && Convert.ToInt32(Model.PeopleCount) > 200)
                                            {
                                                <div style="text-align:center">
                                                    <div class="frame">
                                                        <div class="zoom">
                                                            <i class="glyphicon glyphicon-user"></i> <i class="glyphicon glyphicon-user"></i>
                                                            <i class="glyphicon glyphicon-user"></i> <i class="glyphicon glyphicon-user"></i>
                                                            <p>Busy street!</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            @if (Convert.ToInt32(Model.PeopleCount) > 400)
                                            {
                                                <div style="text-align:center">
                                                    <div class="frame">
                                                        <div class="zoom">
                                                            <i class="glyphicon glyphicon-user"></i> <i class="glyphicon glyphicon-user"></i>
                                                            <i class="glyphicon glyphicon-user"></i> <i class="glyphicon glyphicon-user"></i>
                                                            <i class="glyphicon glyphicon-user"></i> <i class="glyphicon glyphicon-user"></i>
                                                            <p>Crowder Than Usual!</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            }

                                        </div>
                                    </div><br />
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="frame">
                                                <div class="zoom">
                                                    <b>Accessibility Level  </b>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-9">
                                            @if (Convert.ToInt32(Model.AccessibilityRating) == 0)
                                            {
                                                <div style="text-align:center">
                                                    <div class="frame">
                                                        <div class="zoom">
                                                            <i class="glyphicon glyphicon-ban-circle"></i>
                                                            <p>Sorry no Accessibility info found!</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            @if (Convert.ToInt32(Model.AccessibilityRating) == 1)
                                            {
                                                <div style="text-align:center">
                                                    <div class="frame">
                                                        <div class="zoom">
                                                            <img src="~/images/LowAccessibility.png" />
                                                            <p>Low Level Accessibility</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            }

                                            @if (Convert.ToInt32(Model.AccessibilityRating) == 2)
                                            {
                                                <div style="text-align:center">
                                                    <div class="frame">
                                                        <div class="zoom">
                                                            <img src="~/images/MediumAccessibility.png" />
                                                            <p>Moderate Level Accessibility</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            @if (Convert.ToInt32(Model.AccessibilityRating) == 3)
                                            {
                                                <div style="text-align:center">
                                                    <div class="frame">
                                                        <div class="zoom">
                                                            <img src="~/images/HighAccessibility.png" />
                                                            <p>High Level Accessibility</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-md-3">
                                            <b>Weather Situation  </b>
                                        </div>
                                        <div class="col-md-9">
                                            <div style="text-align:center">
                                                <div id="weatherimg"></div>
                                                <p id="weather"></p>
                                            </div>
                                        </div>
                                    </div>
                                }
                                @using (Html.BeginForm("NewPlan", "UserPlans"))
                                {
                                    <div class="searchform" style="text-align:center">
                                        <div class="frame">
                                            <div class="zoom">
                                                <label for="CLocation">Like to checkout this Place? Add to your Planner.</label>
                                            </div>
                                        </div>
                                    </div>
                                    @Html.Hidden("location", tolocation)
                                    <input hidden type="text" name="lat" value=@Model.Latitude />
                                    <input hidden type="text" name="lon" value=@Model.Longitude />
                                    <input id="plannedDate" hidden type="text" name="plandate" value=@Model.Date />
                                    <input id="plannedTime" hidden type="text" name="time" value="@Model.Time" />
                                    <div class="row">
                                        <div style="text-align:center">
                                            <div class="frame">
                                                <div class="zoom">
                                                    <input type="submit" value="Add to Plan" class="button" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div> <!-- end col-md-6 -->


                        </div> <!-- end .row -->
                    </div> <!-- end .box -->
                </div> <!-- end .container -->
            </div> <!-- end .inner -->
        </div> <!-- end .section -->



        <hr>
    </div>
</body>


<script>
    var scenter = "";
    var address = "@Model.Location";
    var latit = @Model.Latitude;
    var lon = @Model.Longitude;
    var currentLocation = "";
    //initialise the map with center at the user chosen location
    function initMap() {
        var geocoder = new google.maps.Geocoder();
        var infowindow = new google.maps.InfoWindow();
        //replace the controls to different locations
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 16,
            center: { lat: latit, lng: lon },
            mapTypeControl: true,
            mapTypeControlOptions: {
                style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
                position: google.maps.ControlPosition.BOTTOM_CENTER
            },
            zoomControl: true,
            zoomControlOptions: {
                position: google.maps.ControlPosition.LEFT_CENTER
            },
            scaleControl: true,
            streetViewControl: true,
            streetViewControlOptions: {
                position: google.maps.ControlPosition.LEFT_BOTTOM
            },
            fullscreenControl: true,
            fullscreenControlOptions: {
                position: google.maps.ControlPosition.RIGHT_BOTTOM
            }
        });

        // add marker at the location
        var marker = new google.maps.Marker({
            map: map,
            position: { lat: latit, lng: lon }
        });

        //set the contents of the infowindow and add onclick listener to the marker
        google.maps.event.addListener(marker, 'click', function () {
            infowindow.setContent("@tolocation");
            infowindow.open(map, this);
        });

    }

    //get the users current network location
    function getCurrentLocation() {
        var options = {
            enableHighAccuracy: true,
            timeout: 5000,
            maximumAge: 0
        };

        function success(pos) {
            currentLocation = pos.coords;
            //on success redirect to google maps window with current location as start
            window.open(returnMapUrl(currentLocation.latitude, currentLocation.longitude), '_blank');
        }

        function error(err) {
            console.warn(`ERROR(${err.code}): ${err.message}`);
        }

        navigator.geolocation.getCurrentPosition(success, error, options);
    }

    function returnMapUrl(dlat, dlng) {
        //open google maps with start as user location and end as the searched location
        return "https://www.google.com/maps/dir/?api=1&origin=" + dlat + ',' + dlng + "&destination=" + latit + ',' + lon ;
    }
    function redirectToMaps() {
        getCurrentLocation();
    }

</script>
<script>
    $(document).ready(function () {
        //jquery request to the Home controller's GetWeather method
        $.get("@Url.Action("GetWeather", "Home")", function (response) {
            //get the output div element to display the weather image
            var weatherimg = document.getElementById("weatherimg");
            for (i = 1; i < 40; i++)
            {
                //The weather forecast from the openweather api contains time interval of 3 hours
                //The user selected date needs to be evaluated to find the interval in which it
                //lies to get the forecast for that hour.
                // get the left limit of the time
                var calendar_left = response.list[i - 1].dt_txt;
                //get the right limit of the time
                var calendar_right = response.list[i].dt_txt;
                var cur_date = "@weatherDate";
                var cur_time = " @fulltime";
                //format the user selected date
                var cur_time_detail = cur_date + cur_time;
                //convert the date time to UTC time format
                var utc_time = convertToUtcDate(cur_time_detail);
                weatherimg.innerHTML = "";
                //get the response from openweather api
                var weather = response.list[i - 1].weather[0].main;
                //compare the user selected UTC time with the left and right limits of the time
                var result1 = utc_time.localeCompare(calendar_left);
                var result2 = utc_time.localeCompare(calendar_right);
                //compare the UTC compare results and display the correponding weather details
                if (((result1 == 1) || (result1 == 0)) && (result2 == -1)) {
                    switch (weather.toLowerCase()) {
                        case ("rain"):
                        case ("drizzle"):
                        case ("wind"):
                            $("#weather").text("Wet weather! Be careful!");
                            weatherimg.innerHTML = '<img src="/images/Moderate.png"/>'
                            break;

                        case ("clear"):
                        case ("clouds"):
                            $("#weather").text("Fine weather! Enjoy your trips!");
                            weatherimg.innerHTML = '<img src="/images/good.png" />';
                            break;

                        case ("thunderstorm"):
                        case ("snow"):
                        case ("mist"):
                        case ("smoke"):
                        case ("haze"):
                        case ("dust"):
                        case ("fog"):
                        case ("sand"):
                        case ("ash"):
                        case ("squall"):
                        case ("tornado"):
                            $("#weather").text("Terrible Weather! Not Recommended!");
                            weatherimg.innerHTML = '<img src="/images/Bad.png"/>';
                            break;
                    }
                    return;
                }
                else {
                    weatherimg.innerHTML = '<i class="glyphicon glyphicon-ban-circle"></i>';
                    $("#weather").text("Sorry no Info Found!");
                }
            }
        });
    });

    //function to convert user date to UTC format
    function convertToUtcDate(date) {
        var newDate = new Date(date);
        var year = newDate.getUTCFullYear().toString();
        //converting the local month to UTC month and compare the user selected month by adding the prefix
        if (newDate.getUTCMonth() < 9) {
            var month = "0" + (newDate.getUTCMonth() + 1).toString();
        }
        else {
            var month = (newDate.getUTCMonth() + 1).toString();
        }
        //convert the local date to UTC date and compare the user selected date by adding the prefix
        if (newDate.getUTCDate() < 10) {
            var day = "0" + newDate.getUTCDate().toString();
        }
        else {
            var day = newDate.getUTCDate().toString();
        }
        //convert the local hours to UTC hours and compare the user selected hours by adding the prefix
        if (newDate.getUTCHours() < 10) {
            var hour = "0" + newDate.getUTCHours().toString();
        }
        else {
            var hour = newDate.getUTCHours().toString();
        }
        //convert the local minutes to UTC minutes and compare the user selected minutes by adding the prefix
        if (newDate.getUTCMinutes() < 10) {
            var minute = "0" + newDate.getUTCMinutes().toString();
        }
        else {
            var minute = newDate.getUTCMinutes().toString();
        }
        //convert the local minutes to UTC seconds and compare the user selected seconds by adding the suffix
        if (newDate.getUTCSeconds() == 0) {
            var second = newDate.getUTCSeconds().toString() + "0";
        }
        else {
            var second = newDate.getUTCSeconds().toString();
        }
        //return the date in UTC format
        var utc_time = year + "-" + month + "-" + day + " " + hour + ":" + minute + ":" + second;
        return (utc_time);
    };
</script>

<script type="text/javascript">
    $(function () {
        $('#Date').datetimepicker({
            minDate: new Date(),
        }).on('dp.change', function (e) {
            //on change set the values for date element
            document.getElementById("Date").value = e.date.format("MM/DD/YYYY HH:mm:ss");
        });
    });

</script>
